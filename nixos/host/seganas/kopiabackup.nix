
{ inputs, config, pkgs, nixpkgs, lib, ... }:
let  
  kopiaCacheDir = "/var/kopia/cache";
  kopiaCacheLog = "/var/kopia/log";
  backupServerSshPubKey = pkgs.writeText "nuc.keys" ''
    192.168.0.250 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIMtTAOaoX42tTvLwP03Go1N1ZLEjGQMfOnRkDZcsYQod
    192.168.0.250 ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDf9atzXSXYkRZ7lGDwA+v7yNgqAPtbs8vF/QrpowoXktv0E+dyPCpoobyqUBwnrx/EeG/rbaS6xe70FIReWIQkxCqzThbE8lACbI2/mg7AbPPX6OVFjGIIhYmKQ0qs3D7S2LHxi2l+wtNYk9zVokFzvCHBP/yrkGMYsRHaiNJzSiKb2wE89S4B7WfAu1iLE5xN0+auHlYM4p4B+AMpoYDA5+4IVQTOaoZkA50lphUGxQCoV9CWYLGn/VgrO0EUDkFeBB7a/G/GuRu99biag4dk09eWegN78Jy+/Chv3ExylmmGRvsRWI55PTmCAGVgNpN6YCpUhea9tiqQkRs5ygeViSfdTqnqggLukm8Bc+eO1GoEECFbMxoi004K9hp+lBqFDXSilDzKvJF07Z7+QUDP0snZMfIHi2VuSP2ZvhIFOUovs/rD8oP8zWKmJu57kVsIUt9fWUGomFQHFWbKQEo3+RlmraxH7vNR4XXkqe614oFJQNHtLEroqHNoq/F/8aCJb5CvqRu9XJRBWGVONoJf1ZxHSupFIjo8EygpSbUnjkwi2rnZwTJkz9Y8/PhNubAWvuOb2sPdvxKEWuxfMOrC7fwTYvn4wMh10fxtV4xFTzyVvtzRIZpCPelUFV0OqZXV2KAL+e4hLRJptK7Ye4kliHCN8VT4wXwMD6oCcs97Qw== root@nuc
    192.168.0.250 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBBA1UnoeReVpRrtvc4v3BqMivt5X8q1RZRi/g0NrFfBti2wyudtbyQfy4XINP3biSzQkkRtkh/Sfhy+rmaKWGtY=
    '';

   kopiaRepoConfig = pkgs.writeText "repo.config" ''
    {
      "storage": {
        "type": "sftp",
        "config": {
          "path": "/backup/kopia",
          "host": "192.168.0.250",
          "port": 22,
          "username": "root",
          "keyfile": "${config.sops.secrets."kopia-backup-sshkey".path}",
          "knownHostsFile": "${backupServerSshPubKey}",
          "externalSSH": false,
          "sshCommand": "ssh",
          "dirShards": null
        }
      },
      "caching": {
        "cacheDirectory": "${kopiaCacheDir}",
        "maxCacheSize": 5242880000,
        "maxMetadataCacheSize": 5242880000,
        "maxListCacheDuration": 30
      },
      "hostname": "${config.networking.hostName}",
      "username": "root",
      "description": "Backup Repository",
      "enableActions": false,
      "formatBlobCacheDuration": 900000000000
    }
   '';
    kopia-backup = pkgs.writeShellScriptBin "kopia" ''
    
    export KOPIA_PASSWORD=$(cat ${config.sops.secrets.kopia_passphrase.path})
    export KOPIA_CONFIG_PATH=/tmp/kopia/repo.config
    export KOPIA_CACHE_DIRECTORY=${kopiaCacheDir}
    export KOPIA_LOG_DIR=${kopiaCacheLog}
    export KOPIA_CHECK_FOR_UPDATES=false
    export KOPIA_PERSIST_CREDENTIALS_ON_CONNECT=false

    # Workarrond to avoid https://github.com/kopia/kopia/blob/master/repo/maintenance/maintenance_run.go#L178 due is creating lock file on the directory where config lives that as being generated by nix is read-only 
    # Other option would be to patch kopia to save this lock file somewhere else but i prefer this option as won't require maintainance.
    mkdir -p /tmp/kopia
    cp ${kopiaRepoConfig} ''${KOPIA_CONFIG_PATH}

    exec ${pkgs.kopia}/bin/kopia "$@"
  '';
in
{
  
  environment.systemPackages = [
    kopia-backup
  ];

  sops.secrets."kopia-backup-sshkey" = {
    sopsFile = ../../../secrets/common/kopia-nuc-ssh.key;
    format = "binary";
  };

  sops.secrets.kopia_passphrase = {};

  systemd = {
    timers.kopia-backup = {
      enable = true;
      wantedBy = ["timers.target"];
      partOf = ["kopia-backup.service"];
      timerConfig.OnCalendar = "05:00";
    };
    services.kopia-backup = {
      serviceConfig = {
        Type = "oneshot";
      };
      script = ''
        ${kopia-backup}/bin/kopia snapshot create ${lib.concatStringsSep " " config.nas.backup.sourceDirectories}
      '';
    };

    timers.kopia-verify = {
      enable = true;
      wantedBy = ["timers.target"];
      partOf = ["kopia-verify.service"];
      timerConfig.OnCalendar = "*-*-01 00:00:00";
    };
    services.kopia-verify = {
      serviceConfig = {
        Type = "oneshot";
      };
      script = ''
        ${kopia-backup}/bin/kopia snapshot verify --verify-files-percent=1 --file-parallelism=4 --parallel=4
      '';
    };
  };
}